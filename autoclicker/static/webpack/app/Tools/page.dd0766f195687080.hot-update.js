"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/Tools/page",{

/***/ "(app-pages-browser)/./src/app/toolsChild/Mictest.js":
/*!***************************************!*\
  !*** ./src/app/toolsChild/Mictest.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _assets_camera_gif__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../assets/camera.gif */ \"(app-pages-browser)/./src/app/assets/camera.gif\");\n/* harmony import */ var _assets_network_webp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../assets/network.webp */ \"(app-pages-browser)/./src/app/assets/network.webp\");\n/* harmony import */ var react_mic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react-mic */ \"(app-pages-browser)/./node_modules/react-mic/dist/index.js\");\n/* harmony import */ var react_mic__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_mic__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var annyang__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! annyang */ \"(app-pages-browser)/./node_modules/annyang/dist/annyang.min.js\");\n/* harmony import */ var annyang__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(annyang__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var wavesurfer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! wavesurfer.js */ \"(app-pages-browser)/./node_modules/wavesurfer.js/dist/wavesurfer.esm.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst MicTest = (props)=>{\n    _s();\n    // *********************style*******************\n    const style = {\n        webchilebox: {\n            alignItems: \"center\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n        },\n        webcamTitle: {\n            fontWeight: \"600\",\n            fontSize: \"20px\"\n        },\n        BoxCamera: {\n            boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\",\n            borderRadius: \"10px\",\n            margin: \"auto\",\n            padding: \"20px\",\n            width: \"45%\"\n        },\n        labeltext: {\n            textAlign: \"center\",\n            fontWeight: \"600\",\n            fontSize: \"20px\",\n            color: \"red\"\n        },\n        labeltextC: {\n            textAlign: \"center\",\n            fontWeight: \"600\",\n            fontSize: \"20px\",\n            color: \"green\"\n        }\n    };\n    const [isRecording, setIsRecording] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [audioURL, setAudioURL] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [recognizedText, setRecognizedText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [synthesizedText, setSynthesizedText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const wavesurferRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    useEffect(()=>{\n        const wavesurfer = wavesurfer_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"].create({\n            container: wavesurferRef.current,\n            waveColor: \"rgba(0, 0, 255, 0.3)\",\n            progressColor: \"blue\",\n            height: 100,\n            barWidth: 2\n        });\n        return ()=>wavesurfer.destroy();\n    }, []);\n    const onStartRecording = ()=>{\n        setIsRecording(true);\n    };\n    const onStopRecording = (recordedBlob)=>{\n        setIsRecording(false);\n        setAudioURL(recordedBlob.blobURL);\n        // Speech-to-text using Web Speech API\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.lang = \"en-US\";\n        recognition.interimResults = false;\n        recognition.maxAlternatives = 1;\n        recognition.onresult = (event)=>{\n            const transcript = event.results[0][0].transcript;\n            setRecognizedText(transcript);\n        };\n        recognition.onerror = (event)=>{\n            console.error(\"Speech recognition error:\", event.error);\n        };\n        recognition.onend = ()=>{\n            console.log(\"Speech recognition ended\");\n            synthesisText(recognizedText);\n        };\n        recognition.start();\n    };\n    const onSpeechRecognition = ()=>{\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.lang = \"en-US\";\n        recognition.interimResults = false;\n        recognition.maxAlternatives = 1;\n        recognition.onresult = (event)=>{\n            const transcript = event.results[0][0].transcript;\n            setRecognizedText(transcript);\n        };\n        recognition.onerror = (event)=>{\n            console.error(\"Speech recognition error:\", event.error);\n        };\n        recognition.onend = ()=>{\n            console.log(\"Speech recognition ended\");\n            synthesisText(recognizedText);\n        };\n        recognition.start();\n    };\n    const synthesisText = (text)=>{\n        const utterance = new SpeechSynthesisUtterance(text);\n        speechSynthesis.speak(utterance);\n        setSynthesizedText(text);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"cameratestBox\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: style.webchilebox,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                            style: style.webcamTitle,\n                            children: \"Mic Test\"\n                        }, void 0, false, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 126,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                        lineNumber: 125,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: props.isclose,\n                            className: \"focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900\",\n                            children: \"Back\"\n                        }, void 0, false, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 129,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                        lineNumber: 128,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                lineNumber: 124,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: style.BoxCamera,\n                className: \"BoxCamera\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            ref: wavesurferRef\n                        }, void 0, false, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 135,\n                            columnNumber: 7\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_mic__WEBPACK_IMPORTED_MODULE_5__.ReactMic, {\n                            record: isRecording,\n                            onStop: onStopRecording,\n                            onStart: onStartRecording,\n                            strokeColor: \"#000000\",\n                            backgroundColor: \"#FF4081\"\n                        }, void 0, false, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 136,\n                            columnNumber: 7\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: onSpeechRecognition,\n                            disabled: isRecording,\n                            children: isRecording ? \"Recording...\" : \"Start Speech Recognition\"\n                        }, void 0, false, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 142,\n                            columnNumber: 7\n                        }, undefined),\n                        audioURL && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                            controls: true,\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                                    src: audioURL,\n                                    type: \"audio/wav\"\n                                }, void 0, false, {\n                                    fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                                    lineNumber: 147,\n                                    columnNumber: 11\n                                }, undefined),\n                                \"Your browser does not support the audio element.\"\n                            ]\n                        }, void 0, true, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 146,\n                            columnNumber: 9\n                        }, undefined),\n                        recognizedText && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: [\n                                \"Recognized Text: \",\n                                recognizedText\n                            ]\n                        }, void 0, true, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 152,\n                            columnNumber: 9\n                        }, undefined),\n                        synthesizedText && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            children: [\n                                \"Synthesized Text: \",\n                                synthesizedText\n                            ]\n                        }, void 0, true, {\n                            fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                            lineNumber: 155,\n                            columnNumber: 9\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                    lineNumber: 134,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n                lineNumber: 133,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"I:\\\\cluematrix_project_asmita\\\\autoclicker\\\\autoclicker_frontend\\\\src\\\\app\\\\toolsChild\\\\Mictest.js\",\n        lineNumber: 123,\n        columnNumber: 5\n    }, undefined);\n};\n_s(MicTest, \"LWxQ2jrwW47zJfWAoR21Muqy6b8=\");\n_c = MicTest;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MicTest);\nvar _c;\n$RefreshReg$(_c, \"MicTest\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/toolsChild/Mictest.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/wavesurfer.js/dist/wavesurfer.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/wavesurfer.js/dist/wavesurfer.esm.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ u; }\n/* harmony export */ });\n/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */ function t(t, e, i, s) {\n    return new (i || (i = Promise))(function(n, r) {\n        function o(t) {\n            try {\n                h(s.next(t));\n            } catch (t) {\n                r(t);\n            }\n        }\n        function a(t) {\n            try {\n                h(s.throw(t));\n            } catch (t) {\n                r(t);\n            }\n        }\n        function h(t) {\n            var e;\n            t.done ? n(t.value) : (e = t.value, e instanceof i ? e : new i(function(t) {\n                t(e);\n            })).then(o, a);\n        }\n        h((s = s.apply(t, e || [])).next());\n    });\n}\nclass e {\n    on(t, e, i) {\n        if (this.listeners[t] || (this.listeners[t] = new Set), this.listeners[t].add(e), null == i ? void 0 : i.once) {\n            const i = ()=>{\n                this.un(t, i), this.un(t, e);\n            };\n            return this.on(t, i), i;\n        }\n        return ()=>this.un(t, e);\n    }\n    un(t, e) {\n        var i;\n        null === (i = this.listeners[t]) || void 0 === i || i.delete(e);\n    }\n    once(t, e) {\n        return this.on(t, e, {\n            once: !0\n        });\n    }\n    unAll() {\n        this.listeners = {};\n    }\n    emit(t) {\n        for(var _len = arguments.length, e = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n            e[_key - 1] = arguments[_key];\n        }\n        this.listeners[t] && this.listeners[t].forEach((t)=>t(...e));\n    }\n    constructor(){\n        this.listeners = {};\n    }\n}\nconst i = {\n    decode: function(e, i) {\n        return t(this, void 0, void 0, function*() {\n            const t = new AudioContext({\n                sampleRate: i\n            });\n            return t.decodeAudioData(e).finally(()=>t.close());\n        });\n    },\n    createBuffer: function(t, e) {\n        return \"number\" == typeof t[0] && (t = [\n            t\n        ]), function(t) {\n            const e = t[0];\n            if (e.some((t)=>t > 1 || t < -1)) {\n                const i = e.length;\n                let s = 0;\n                for(let t = 0; t < i; t++){\n                    const i = Math.abs(e[t]);\n                    i > s && (s = i);\n                }\n                for (const e of t)for(let t = 0; t < i; t++)e[t] /= s;\n            }\n        }(t), {\n            duration: e,\n            length: t[0].length,\n            sampleRate: t[0].length / e,\n            numberOfChannels: t.length,\n            getChannelData: (e)=>null == t ? void 0 : t[e],\n            copyFromChannel: AudioBuffer.prototype.copyFromChannel,\n            copyToChannel: AudioBuffer.prototype.copyToChannel\n        };\n    }\n};\nfunction s(t, e) {\n    const i = e.xmlns ? document.createElementNS(e.xmlns, t) : document.createElement(t);\n    for (const [t, n] of Object.entries(e))if (\"children\" === t) for (const [t, n] of Object.entries(e))\"string\" == typeof n ? i.appendChild(document.createTextNode(n)) : i.appendChild(s(t, n));\n    else \"style\" === t ? Object.assign(i.style, n) : \"textContent\" === t ? i.textContent = n : i.setAttribute(t, n.toString());\n    return i;\n}\nfunction n(t, e, i) {\n    const n = s(t, e || {});\n    return null == i || i.appendChild(n), n;\n}\nvar r = Object.freeze({\n    __proto__: null,\n    createElement: n,\n    default: n\n});\nconst o = {\n    fetchBlob: function(e, i, s) {\n        return t(this, void 0, void 0, function*() {\n            const n = yield fetch(e, s);\n            if (n.status >= 400) throw new Error(\"Failed to fetch \".concat(e, \": \").concat(n.status, \" (\").concat(n.statusText, \")\"));\n            return function(e, i) {\n                t(this, void 0, void 0, function*() {\n                    if (!e.body || !e.headers) return;\n                    const s = e.body.getReader(), n = Number(e.headers.get(\"Content-Length\")) || 0;\n                    let r = 0;\n                    const o = (e)=>t(this, void 0, void 0, function*() {\n                            r += (null == e ? void 0 : e.length) || 0;\n                            const t = Math.round(r / n * 100);\n                            i(t);\n                        }), a = ()=>t(this, void 0, void 0, function*() {\n                            let t;\n                            try {\n                                t = yield s.read();\n                            } catch (t) {\n                                return;\n                            }\n                            t.done || (o(t.value), yield a());\n                        });\n                    a();\n                });\n            }(n.clone(), i), n.blob();\n        });\n    }\n};\nclass a extends e {\n    onMediaEvent(t, e, i) {\n        return this.media.addEventListener(t, e, i), ()=>this.media.removeEventListener(t, e, i);\n    }\n    getSrc() {\n        return this.media.currentSrc || this.media.src || \"\";\n    }\n    revokeSrc() {\n        const t = this.getSrc();\n        t.startsWith(\"blob:\") && URL.revokeObjectURL(t);\n    }\n    canPlayType(t) {\n        return \"\" !== this.media.canPlayType(t);\n    }\n    setSrc(t, e) {\n        if (this.getSrc() === t) return;\n        this.revokeSrc();\n        const i = e instanceof Blob && this.canPlayType(e.type) ? URL.createObjectURL(e) : t;\n        this.media.src = i;\n    }\n    destroy() {\n        this.media.pause(), this.isExternalMedia || (this.media.remove(), this.revokeSrc(), this.media.src = \"\", this.media.load());\n    }\n    setMediaElement(t) {\n        this.media = t;\n    }\n    play() {\n        return t(this, void 0, void 0, function*() {\n            return this.media.play();\n        });\n    }\n    pause() {\n        this.media.pause();\n    }\n    isPlaying() {\n        return !this.media.paused && !this.media.ended;\n    }\n    setTime(t) {\n        this.media.currentTime = t;\n    }\n    getDuration() {\n        return this.media.duration;\n    }\n    getCurrentTime() {\n        return this.media.currentTime;\n    }\n    getVolume() {\n        return this.media.volume;\n    }\n    setVolume(t) {\n        this.media.volume = t;\n    }\n    getMuted() {\n        return this.media.muted;\n    }\n    setMuted(t) {\n        this.media.muted = t;\n    }\n    getPlaybackRate() {\n        return this.media.playbackRate;\n    }\n    isSeeking() {\n        return this.media.seeking;\n    }\n    setPlaybackRate(t, e) {\n        null != e && (this.media.preservesPitch = e), this.media.playbackRate = t;\n    }\n    getMediaElement() {\n        return this.media;\n    }\n    setSinkId(t) {\n        return this.media.setSinkId(t);\n    }\n    constructor(t){\n        super(), this.isExternalMedia = !1, t.media ? (this.media = t.media, this.isExternalMedia = !0) : this.media = document.createElement(\"audio\"), t.mediaControls && (this.media.controls = !0), t.autoplay && (this.media.autoplay = !0), null != t.playbackRate && this.onMediaEvent(\"canplay\", ()=>{\n            null != t.playbackRate && (this.media.playbackRate = t.playbackRate);\n        }, {\n            once: !0\n        });\n    }\n}\nclass h extends e {\n    parentFromOptionsContainer(t) {\n        let e;\n        if (\"string\" == typeof t ? e = document.querySelector(t) : t instanceof HTMLElement && (e = t), !e) throw new Error(\"Container not found\");\n        return e;\n    }\n    initEvents() {\n        const t = (t)=>{\n            const e = this.wrapper.getBoundingClientRect(), i = t.clientX - e.left, s = t.clientY - e.top;\n            return [\n                i / e.width,\n                s / e.height\n            ];\n        };\n        this.wrapper.addEventListener(\"click\", (e)=>{\n            const [i, s] = t(e);\n            this.emit(\"click\", i, s);\n        }), this.wrapper.addEventListener(\"dblclick\", (e)=>{\n            const [i, s] = t(e);\n            this.emit(\"dblclick\", i, s);\n        }), !0 !== this.options.dragToSeek && \"object\" != typeof this.options.dragToSeek || this.initDrag(), this.scrollContainer.addEventListener(\"scroll\", ()=>{\n            const { scrollLeft: t, scrollWidth: e, clientWidth: i } = this.scrollContainer, s = t / e, n = (t + i) / e;\n            this.emit(\"scroll\", s, n);\n        });\n        const e = this.createDelay(100);\n        this.resizeObserver = new ResizeObserver(()=>{\n            e().then(()=>this.onContainerResize()).catch(()=>{});\n        }), this.resizeObserver.observe(this.scrollContainer);\n    }\n    onContainerResize() {\n        const t = this.parent.clientWidth;\n        t === this.lastContainerWidth && \"auto\" !== this.options.height || (this.lastContainerWidth = t, this.reRender());\n    }\n    initDrag() {\n        this.subscriptions.push(function(t, e, i, s) {\n            let n = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 3, r = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0, o = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 100;\n            if (!t) return ()=>{};\n            const a = matchMedia(\"(pointer: coarse)\").matches;\n            let h = ()=>{};\n            const l = (l)=>{\n                if (l.button !== r) return;\n                l.preventDefault(), l.stopPropagation();\n                let d = l.clientX, c = l.clientY, u = !1;\n                const p = Date.now(), m = (s)=>{\n                    if (s.preventDefault(), s.stopPropagation(), a && Date.now() - p < o) return;\n                    const r = s.clientX, h = s.clientY, l = r - d, m = h - c;\n                    if (u || Math.abs(l) > n || Math.abs(m) > n) {\n                        const s = t.getBoundingClientRect(), { left: n, top: o } = s;\n                        u || (null == i || i(d - n, c - o), u = !0), e(l, m, r - n, h - o), d = r, c = h;\n                    }\n                }, g = (e)=>{\n                    if (u) {\n                        const i = e.clientX, n = e.clientY, r = t.getBoundingClientRect(), { left: o, top: a } = r;\n                        null == s || s(i - o, n - a);\n                    }\n                    h();\n                }, f = (t)=>{\n                    t.relatedTarget && t.relatedTarget !== document.documentElement || g(t);\n                }, v = (t)=>{\n                    u && (t.stopPropagation(), t.preventDefault());\n                }, b = (t)=>{\n                    u && t.preventDefault();\n                };\n                document.addEventListener(\"pointermove\", m), document.addEventListener(\"pointerup\", g), document.addEventListener(\"pointerout\", f), document.addEventListener(\"pointercancel\", f), document.addEventListener(\"touchmove\", b, {\n                    passive: !1\n                }), document.addEventListener(\"click\", v, {\n                    capture: !0\n                }), h = ()=>{\n                    document.removeEventListener(\"pointermove\", m), document.removeEventListener(\"pointerup\", g), document.removeEventListener(\"pointerout\", f), document.removeEventListener(\"pointercancel\", f), document.removeEventListener(\"touchmove\", b), setTimeout(()=>{\n                        document.removeEventListener(\"click\", v, {\n                            capture: !0\n                        });\n                    }, 10);\n                };\n            };\n            return t.addEventListener(\"pointerdown\", l), ()=>{\n                h(), t.removeEventListener(\"pointerdown\", l);\n            };\n        }(this.wrapper, (t, e, i)=>{\n            this.emit(\"drag\", Math.max(0, Math.min(1, i / this.wrapper.getBoundingClientRect().width)));\n        }, (t)=>{\n            this.isDragging = !0, this.emit(\"dragstart\", Math.max(0, Math.min(1, t / this.wrapper.getBoundingClientRect().width)));\n        }, (t)=>{\n            this.isDragging = !1, this.emit(\"dragend\", Math.max(0, Math.min(1, t / this.wrapper.getBoundingClientRect().width)));\n        }));\n    }\n    getHeight(t) {\n        return null == t ? 128 : isNaN(Number(t)) ? \"auto\" === t && this.parent.clientHeight || 128 : Number(t);\n    }\n    initHtml() {\n        const t = document.createElement(\"div\"), e = t.attachShadow({\n            mode: \"open\"\n        });\n        return e.innerHTML = \"\\n      <style>\\n        :host {\\n          user-select: none;\\n          min-width: 1px;\\n        }\\n        :host audio {\\n          display: block;\\n          width: 100%;\\n        }\\n        :host .scroll {\\n          overflow-x: auto;\\n          overflow-y: hidden;\\n          width: 100%;\\n          position: relative;\\n        }\\n        :host .noScrollbar {\\n          scrollbar-color: transparent;\\n          scrollbar-width: none;\\n        }\\n        :host .noScrollbar::-webkit-scrollbar {\\n          display: none;\\n          -webkit-appearance: none;\\n        }\\n        :host .wrapper {\\n          position: relative;\\n          overflow: visible;\\n          z-index: 2;\\n        }\\n        :host .canvases {\\n          min-height: \".concat(this.getHeight(this.options.height), 'px;\\n        }\\n        :host .canvases > div {\\n          position: relative;\\n        }\\n        :host canvas {\\n          display: block;\\n          position: absolute;\\n          top: 0;\\n          image-rendering: pixelated;\\n        }\\n        :host .progress {\\n          pointer-events: none;\\n          position: absolute;\\n          z-index: 2;\\n          top: 0;\\n          left: 0;\\n          width: 0;\\n          height: 100%;\\n          overflow: hidden;\\n        }\\n        :host .progress > div {\\n          position: relative;\\n        }\\n        :host .cursor {\\n          pointer-events: none;\\n          position: absolute;\\n          z-index: 5;\\n          top: 0;\\n          left: 0;\\n          height: 100%;\\n          border-radius: 2px;\\n        }\\n      </style>\\n\\n      <div class=\"scroll\" part=\"scroll\">\\n        <div class=\"wrapper\" part=\"wrapper\">\\n          <div class=\"canvases\" part=\"canvases\"></div>\\n          <div class=\"progress\" part=\"progress\"></div>\\n          <div class=\"cursor\" part=\"cursor\"></div>\\n        </div>\\n      </div>\\n    '), [\n            t,\n            e\n        ];\n    }\n    setOptions(t) {\n        if (this.options.container !== t.container) {\n            const e = this.parentFromOptionsContainer(t.container);\n            e.appendChild(this.container), this.parent = e;\n        }\n        !0 !== t.dragToSeek && \"object\" != typeof this.options.dragToSeek || this.initDrag(), this.options = t, this.reRender();\n    }\n    getWrapper() {\n        return this.wrapper;\n    }\n    getScroll() {\n        return this.scrollContainer.scrollLeft;\n    }\n    setScroll(t) {\n        this.scrollContainer.scrollLeft = t;\n    }\n    setScrollPercentage(t) {\n        const { scrollWidth: e } = this.scrollContainer, i = e * t;\n        this.setScroll(i);\n    }\n    destroy() {\n        var t;\n        this.subscriptions.forEach((t)=>t()), this.container.remove(), null === (t = this.resizeObserver) || void 0 === t || t.disconnect();\n    }\n    createDelay() {\n        let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 10;\n        let e, i;\n        const s = ()=>{\n            e && clearTimeout(e), i && i();\n        };\n        return this.timeouts.push(s), ()=>new Promise((n, r)=>{\n                s(), i = r, e = setTimeout(()=>{\n                    e = void 0, i = void 0, n();\n                }, t);\n            });\n    }\n    convertColorValues(t) {\n        if (!Array.isArray(t)) return t || \"\";\n        if (t.length < 2) return t[0] || \"\";\n        const e = document.createElement(\"canvas\"), i = e.getContext(\"2d\"), s = e.height * (window.devicePixelRatio || 1), n = i.createLinearGradient(0, 0, 0, s), r = 1 / (t.length - 1);\n        return t.forEach((t, e)=>{\n            const i = e * r;\n            n.addColorStop(i, t);\n        }), n;\n    }\n    renderBarWaveform(t, e, i, s) {\n        const n = t[0], r = t[1] || t[0], o = n.length, { width: a, height: h } = i.canvas, l = h / 2, d = window.devicePixelRatio || 1, c = e.barWidth ? e.barWidth * d : 1, u = e.barGap ? e.barGap * d : e.barWidth ? c / 2 : 0, p = e.barRadius || 0, m = a / (c + u) / o, g = p && \"roundRect\" in i ? \"roundRect\" : \"rect\";\n        i.beginPath();\n        let f = 0, v = 0, b = 0;\n        for(let t = 0; t <= o; t++){\n            const o = Math.round(t * m);\n            if (o > f) {\n                const t = Math.round(v * l * s), n = t + Math.round(b * l * s) || 1;\n                let r = l - t;\n                \"top\" === e.barAlign ? r = 0 : \"bottom\" === e.barAlign && (r = h - n), i[g](f * (c + u), r, c, n, p), f = o, v = 0, b = 0;\n            }\n            const a = Math.abs(n[t] || 0), d = Math.abs(r[t] || 0);\n            a > v && (v = a), d > b && (b = d);\n        }\n        i.fill(), i.closePath();\n    }\n    renderLineWaveform(t, e, i, s) {\n        const n = (e)=>{\n            const n = t[e] || t[0], r = n.length, { height: o } = i.canvas, a = o / 2, h = i.canvas.width / r;\n            i.moveTo(0, a);\n            let l = 0, d = 0;\n            for(let t = 0; t <= r; t++){\n                const r = Math.round(t * h);\n                if (r > l) {\n                    const t = a + (Math.round(d * a * s) || 1) * (0 === e ? -1 : 1);\n                    i.lineTo(l, t), l = r, d = 0;\n                }\n                const o = Math.abs(n[t] || 0);\n                o > d && (d = o);\n            }\n            i.lineTo(l, a);\n        };\n        i.beginPath(), n(0), n(1), i.fill(), i.closePath();\n    }\n    renderWaveform(t, e, i) {\n        if (i.fillStyle = this.convertColorValues(e.waveColor), e.renderFunction) return void e.renderFunction(t, i);\n        let s = e.barHeight || 1;\n        if (e.normalize) {\n            const e = Array.from(t[0]).reduce((t, e)=>Math.max(t, Math.abs(e)), 0);\n            s = e ? 1 / e : 1;\n        }\n        e.barWidth || e.barGap || e.barAlign ? this.renderBarWaveform(t, e, i, s) : this.renderLineWaveform(t, e, i, s);\n    }\n    renderSingleCanvas(t, e, i, s, n, r, o, a) {\n        const h = window.devicePixelRatio || 1, l = document.createElement(\"canvas\"), d = t[0].length;\n        l.width = Math.round(i * (r - n) / d), l.height = s * h, l.style.width = \"\".concat(Math.floor(l.width / h), \"px\"), l.style.height = \"\".concat(s, \"px\"), l.style.left = \"\".concat(Math.floor(n * i / h / d), \"px\"), o.appendChild(l);\n        const c = l.getContext(\"2d\");\n        if (this.renderWaveform(t.map((t)=>t.slice(n, r)), e, c), l.width > 0 && l.height > 0) {\n            const t = l.cloneNode(), i = t.getContext(\"2d\");\n            i.drawImage(l, 0, 0), i.globalCompositeOperation = \"source-in\", i.fillStyle = this.convertColorValues(e.progressColor), i.fillRect(0, 0, l.width, l.height), a.appendChild(t);\n        }\n    }\n    renderChannel(e, i, s, n) {\n        var { overlay: r } = i, o = function(t, e) {\n            var i = {};\n            for(var s in t)Object.prototype.hasOwnProperty.call(t, s) && e.indexOf(s) < 0 && (i[s] = t[s]);\n            if (null != t && \"function\" == typeof Object.getOwnPropertySymbols) {\n                var n = 0;\n                for(s = Object.getOwnPropertySymbols(t); n < s.length; n++)e.indexOf(s[n]) < 0 && Object.prototype.propertyIsEnumerable.call(t, s[n]) && (i[s[n]] = t[s[n]]);\n            }\n            return i;\n        }(i, [\n            \"overlay\"\n        ]);\n        return t(this, void 0, void 0, function*() {\n            const i = document.createElement(\"div\"), a = this.getHeight(o.height);\n            i.style.height = \"\".concat(a, \"px\"), r && n > 0 && (i.style.marginTop = \"-\".concat(a, \"px\")), this.canvasWrapper.style.minHeight = \"\".concat(a, \"px\"), this.canvasWrapper.appendChild(i);\n            const l = i.cloneNode();\n            this.progressWrapper.appendChild(l);\n            const d = e[0].length, c = (t, n)=>{\n                this.renderSingleCanvas(e, o, s, a, Math.max(0, t), Math.min(n, d), i, l);\n            };\n            if (!this.isScrollable && s < h.MAX_CANVAS_WIDTH) return void c(0, d);\n            const { scrollLeft: u, scrollWidth: p, clientWidth: m } = this.scrollContainer, g = d / p;\n            let f = Math.min(h.MAX_CANVAS_WIDTH, m);\n            if (o.barWidth || o.barGap) {\n                const t = o.barWidth || .5, e = t + (o.barGap || t / 2);\n                f % e != 0 && (f = Math.floor(f / e) * e);\n            }\n            const v = Math.floor(Math.abs(u) * g), b = Math.floor(v + f * g), y = b - v;\n            y <= 0 || (c(v, b), yield Promise.all([\n                (()=>t(this, void 0, void 0, function*() {\n                        if (0 === v) return;\n                        const t = this.createDelay();\n                        for(let e = v; e >= 0; e -= y)yield t(), c(Math.max(0, e - y), e);\n                    }))(),\n                (()=>t(this, void 0, void 0, function*() {\n                        if (b === d) return;\n                        const t = this.createDelay();\n                        for(let e = b; e < d; e += y)yield t(), c(e, Math.min(d, e + y));\n                    }))()\n            ]));\n        });\n    }\n    render(e) {\n        return t(this, void 0, void 0, function*() {\n            this.timeouts.forEach((t)=>t()), this.timeouts = [], this.canvasWrapper.innerHTML = \"\", this.progressWrapper.innerHTML = \"\", null != this.options.width && (this.scrollContainer.style.width = \"number\" == typeof this.options.width ? \"\".concat(this.options.width, \"px\") : this.options.width);\n            const t = window.devicePixelRatio || 1, i = this.scrollContainer.clientWidth, s = Math.ceil(e.duration * (this.options.minPxPerSec || 0));\n            this.isScrollable = s > i;\n            const n = this.options.fillParent && !this.isScrollable, r = (n ? i : s) * t;\n            this.wrapper.style.width = n ? \"100%\" : \"\".concat(s, \"px\"), this.scrollContainer.style.overflowX = this.isScrollable ? \"auto\" : \"hidden\", this.scrollContainer.classList.toggle(\"noScrollbar\", !!this.options.hideScrollbar), this.cursor.style.backgroundColor = \"\".concat(this.options.cursorColor || this.options.progressColor), this.cursor.style.width = \"\".concat(this.options.cursorWidth, \"px\"), this.audioData = e, this.emit(\"render\");\n            try {\n                if (this.options.splitChannels) yield Promise.all(Array.from({\n                    length: e.numberOfChannels\n                }).map((t, i)=>{\n                    var s;\n                    const n = Object.assign(Object.assign({}, this.options), null === (s = this.options.splitChannels) || void 0 === s ? void 0 : s[i]);\n                    return this.renderChannel([\n                        e.getChannelData(i)\n                    ], n, r, i);\n                }));\n                else {\n                    const t = [\n                        e.getChannelData(0)\n                    ];\n                    e.numberOfChannels > 1 && t.push(e.getChannelData(1)), yield this.renderChannel(t, this.options, r, 0);\n                }\n            } catch (t) {\n                return;\n            }\n            this.emit(\"rendered\");\n        });\n    }\n    reRender() {\n        if (!this.audioData) return;\n        const { scrollWidth: t } = this.scrollContainer, { right: e } = this.progressWrapper.getBoundingClientRect();\n        if (this.render(this.audioData), this.isScrollable && t !== this.scrollContainer.scrollWidth) {\n            const { right: t } = this.progressWrapper.getBoundingClientRect();\n            let i = t - e;\n            i *= 2, i = i < 0 ? Math.floor(i) : Math.ceil(i), i /= 2, this.scrollContainer.scrollLeft += i;\n        }\n    }\n    zoom(t) {\n        this.options.minPxPerSec = t, this.reRender();\n    }\n    scrollIntoView(t) {\n        let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;\n        const { scrollLeft: i, scrollWidth: s, clientWidth: n } = this.scrollContainer, r = t * s, o = i, a = i + n, h = n / 2;\n        if (this.isDragging) {\n            const t = 30;\n            r + t > a ? this.scrollContainer.scrollLeft += t : r - t < o && (this.scrollContainer.scrollLeft -= t);\n        } else {\n            (r < o || r > a) && (this.scrollContainer.scrollLeft = r - (this.options.autoCenter ? h : 0));\n            const t = r - i - h;\n            e && this.options.autoCenter && t > 0 && (this.scrollContainer.scrollLeft += Math.min(t, 10));\n        }\n        {\n            const t = this.scrollContainer.scrollLeft, e = t / s, i = (t + n) / s;\n            this.emit(\"scroll\", e, i);\n        }\n    }\n    renderProgress(t, e) {\n        if (isNaN(t)) return;\n        const i = 100 * t;\n        this.canvasWrapper.style.clipPath = \"polygon(\".concat(i, \"% 0, 100% 0, 100% 100%, \").concat(i, \"% 100%)\"), this.progressWrapper.style.width = \"\".concat(i, \"%\"), this.cursor.style.left = \"\".concat(i, \"%\"), this.cursor.style.transform = \"translateX(-\".concat(100 === Math.round(i) ? this.options.cursorWidth : 0, \"px)\"), this.isScrollable && this.options.autoScroll && this.scrollIntoView(t, e);\n    }\n    exportImage(e, i, s) {\n        return t(this, void 0, void 0, function*() {\n            const t = this.canvasWrapper.querySelectorAll(\"canvas\");\n            if (!t.length) throw new Error(\"No waveform data\");\n            if (\"dataURL\" === s) {\n                const s = Array.from(t).map((t)=>t.toDataURL(e, i));\n                return Promise.resolve(s);\n            }\n            return Promise.all(Array.from(t).map((t)=>new Promise((s, n)=>{\n                    t.toBlob((t)=>{\n                        t ? s(t) : n(new Error(\"Could not export image\"));\n                    }, e, i);\n                })));\n        });\n    }\n    constructor(t, e){\n        super(), this.timeouts = [], this.isScrollable = !1, this.audioData = null, this.resizeObserver = null, this.lastContainerWidth = 0, this.isDragging = !1, this.subscriptions = [], this.subscriptions = [], this.options = t;\n        const i = this.parentFromOptionsContainer(t.container);\n        this.parent = i;\n        const [s, n] = this.initHtml();\n        i.appendChild(s), this.container = s, this.scrollContainer = n.querySelector(\".scroll\"), this.wrapper = n.querySelector(\".wrapper\"), this.canvasWrapper = n.querySelector(\".canvases\"), this.progressWrapper = n.querySelector(\".progress\"), this.cursor = n.querySelector(\".cursor\"), e && n.appendChild(e), this.initEvents();\n    }\n}\nh.MAX_CANVAS_WIDTH = 4e3;\nclass l extends e {\n    start() {\n        this.unsubscribe = this.on(\"tick\", ()=>{\n            requestAnimationFrame(()=>{\n                this.emit(\"tick\");\n            });\n        }), this.emit(\"tick\");\n    }\n    stop() {\n        this.unsubscribe();\n    }\n    destroy() {\n        this.unsubscribe();\n    }\n    constructor(){\n        super(...arguments), this.unsubscribe = ()=>{};\n    }\n}\nclass d extends e {\n    load() {\n        return t(this, void 0, void 0, function*() {});\n    }\n    get src() {\n        return this.currentSrc;\n    }\n    set src(t) {\n        if (this.currentSrc = t, this._duration = void 0, !t) return this.buffer = null, void this.emit(\"emptied\");\n        fetch(t).then((e)=>{\n            if (e.status >= 400) throw new Error(\"Failed to fetch \".concat(t, \": \").concat(e.status, \" (\").concat(e.statusText, \")\"));\n            return e.arrayBuffer();\n        }).then((e)=>this.currentSrc !== t ? null : this.audioContext.decodeAudioData(e)).then((e)=>{\n            this.currentSrc === t && (this.buffer = e, this.emit(\"loadedmetadata\"), this.emit(\"canplay\"), this.autoplay && this.play());\n        });\n    }\n    _play() {\n        var t;\n        if (!this.paused) return;\n        this.paused = !1, null === (t = this.bufferNode) || void 0 === t || t.disconnect(), this.bufferNode = this.audioContext.createBufferSource(), this.buffer && (this.bufferNode.buffer = this.buffer), this.bufferNode.playbackRate.value = this._playbackRate, this.bufferNode.connect(this.gainNode);\n        let e = this.playedDuration * this._playbackRate;\n        e >= this.duration && (e = 0, this.playedDuration = 0), this.bufferNode.start(this.audioContext.currentTime, e), this.playStartTime = this.audioContext.currentTime, this.bufferNode.onended = ()=>{\n            this.currentTime >= this.duration && (this.pause(), this.emit(\"ended\"));\n        };\n    }\n    _pause() {\n        var t;\n        this.paused = !0, null === (t = this.bufferNode) || void 0 === t || t.stop(), this.playedDuration += this.audioContext.currentTime - this.playStartTime;\n    }\n    play() {\n        return t(this, void 0, void 0, function*() {\n            this.paused && (this._play(), this.emit(\"play\"));\n        });\n    }\n    pause() {\n        this.paused || (this._pause(), this.emit(\"pause\"));\n    }\n    stopAt(t) {\n        var e, i;\n        const s = t - this.currentTime;\n        null === (e = this.bufferNode) || void 0 === e || e.stop(this.audioContext.currentTime + s), null === (i = this.bufferNode) || void 0 === i || i.addEventListener(\"ended\", ()=>{\n            this.bufferNode = null, this.pause();\n        }, {\n            once: !0\n        });\n    }\n    setSinkId(e) {\n        return t(this, void 0, void 0, function*() {\n            return this.audioContext.setSinkId(e);\n        });\n    }\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(t) {\n        this._playbackRate = t, this.bufferNode && (this.bufferNode.playbackRate.value = t);\n    }\n    get currentTime() {\n        return (this.paused ? this.playedDuration : this.playedDuration + (this.audioContext.currentTime - this.playStartTime)) * this._playbackRate;\n    }\n    set currentTime(t) {\n        const e = !this.paused;\n        e && this._pause(), this.playedDuration = t / this._playbackRate, e && this._play(), this.emit(\"seeking\"), this.emit(\"timeupdate\");\n    }\n    get duration() {\n        var t, e;\n        return null !== (t = this._duration) && void 0 !== t ? t : (null === (e = this.buffer) || void 0 === e ? void 0 : e.duration) || 0;\n    }\n    set duration(t) {\n        this._duration = t;\n    }\n    get volume() {\n        return this.gainNode.gain.value;\n    }\n    set volume(t) {\n        this.gainNode.gain.value = t, this.emit(\"volumechange\");\n    }\n    get muted() {\n        return this._muted;\n    }\n    set muted(t) {\n        this._muted !== t && (this._muted = t, this._muted ? this.gainNode.disconnect() : this.gainNode.connect(this.audioContext.destination));\n    }\n    canPlayType(t) {\n        return /^(audio|video)\\//.test(t);\n    }\n    getGainNode() {\n        return this.gainNode;\n    }\n    getChannelData() {\n        const t = [];\n        if (!this.buffer) return t;\n        const e = this.buffer.numberOfChannels;\n        for(let i = 0; i < e; i++)t.push(this.buffer.getChannelData(i));\n        return t;\n    }\n    constructor(t = new AudioContext){\n        super(), this.bufferNode = null, this.playStartTime = 0, this.playedDuration = 0, this._muted = !1, this._playbackRate = 1, this._duration = void 0, this.buffer = null, this.currentSrc = \"\", this.paused = !0, this.crossOrigin = null, this.seeking = !1, this.autoplay = !1, this.addEventListener = this.on, this.removeEventListener = this.un, this.audioContext = t, this.gainNode = this.audioContext.createGain(), this.gainNode.connect(this.audioContext.destination);\n    }\n}\nconst c = {\n    waveColor: \"#999\",\n    progressColor: \"#555\",\n    cursorWidth: 1,\n    minPxPerSec: 0,\n    fillParent: !0,\n    interact: !0,\n    dragToSeek: !1,\n    autoScroll: !0,\n    autoCenter: !0,\n    sampleRate: 8e3\n};\nclass u extends a {\n    static create(t) {\n        return new u(t);\n    }\n    updateProgress() {\n        let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.getCurrentTime();\n        return this.renderer.renderProgress(t / this.getDuration(), this.isPlaying()), t;\n    }\n    initTimerEvents() {\n        this.subscriptions.push(this.timer.on(\"tick\", ()=>{\n            if (!this.isSeeking()) {\n                const t = this.updateProgress();\n                this.emit(\"timeupdate\", t), this.emit(\"audioprocess\", t);\n            }\n        }));\n    }\n    initPlayerEvents() {\n        this.isPlaying() && (this.emit(\"play\"), this.timer.start()), this.mediaSubscriptions.push(this.onMediaEvent(\"timeupdate\", ()=>{\n            const t = this.updateProgress();\n            this.emit(\"timeupdate\", t);\n        }), this.onMediaEvent(\"play\", ()=>{\n            this.emit(\"play\"), this.timer.start();\n        }), this.onMediaEvent(\"pause\", ()=>{\n            this.emit(\"pause\"), this.timer.stop();\n        }), this.onMediaEvent(\"emptied\", ()=>{\n            this.timer.stop();\n        }), this.onMediaEvent(\"ended\", ()=>{\n            this.emit(\"finish\");\n        }), this.onMediaEvent(\"seeking\", ()=>{\n            this.emit(\"seeking\", this.getCurrentTime());\n        }), this.onMediaEvent(\"error\", (t)=>{\n            this.emit(\"error\", t.error);\n        }));\n    }\n    initRendererEvents() {\n        this.subscriptions.push(this.renderer.on(\"click\", (t, e)=>{\n            this.options.interact && (this.seekTo(t), this.emit(\"interaction\", t * this.getDuration()), this.emit(\"click\", t, e));\n        }), this.renderer.on(\"dblclick\", (t, e)=>{\n            this.emit(\"dblclick\", t, e);\n        }), this.renderer.on(\"scroll\", (t, e)=>{\n            const i = this.getDuration();\n            this.emit(\"scroll\", t * i, e * i);\n        }), this.renderer.on(\"render\", ()=>{\n            this.emit(\"redraw\");\n        }), this.renderer.on(\"rendered\", ()=>{\n            this.emit(\"redrawcomplete\");\n        }), this.renderer.on(\"dragstart\", (t)=>{\n            this.emit(\"dragstart\", t);\n        }), this.renderer.on(\"dragend\", (t)=>{\n            this.emit(\"dragend\", t);\n        }));\n        {\n            let t;\n            this.subscriptions.push(this.renderer.on(\"drag\", (e)=>{\n                if (!this.options.interact) return;\n                let i;\n                this.renderer.renderProgress(e), clearTimeout(t), this.isPlaying() ? i = 0 : !0 === this.options.dragToSeek ? i = 200 : \"object\" == typeof this.options.dragToSeek && void 0 !== this.options.dragToSeek && (i = this.options.dragToSeek.debounceTime), t = setTimeout(()=>{\n                    this.seekTo(e);\n                }, i), this.emit(\"interaction\", e * this.getDuration()), this.emit(\"drag\", e);\n            }));\n        }\n    }\n    initPlugins() {\n        var t;\n        (null === (t = this.options.plugins) || void 0 === t ? void 0 : t.length) && this.options.plugins.forEach((t)=>{\n            this.registerPlugin(t);\n        });\n    }\n    unsubscribePlayerEvents() {\n        this.mediaSubscriptions.forEach((t)=>t()), this.mediaSubscriptions = [];\n    }\n    setOptions(t) {\n        this.options = Object.assign({}, this.options, t), this.renderer.setOptions(this.options), t.audioRate && this.setPlaybackRate(t.audioRate), null != t.mediaControls && (this.getMediaElement().controls = t.mediaControls);\n    }\n    registerPlugin(t) {\n        return t._init(this), this.plugins.push(t), this.subscriptions.push(t.once(\"destroy\", ()=>{\n            this.plugins = this.plugins.filter((e)=>e !== t);\n        })), t;\n    }\n    getWrapper() {\n        return this.renderer.getWrapper();\n    }\n    getScroll() {\n        return this.renderer.getScroll();\n    }\n    setScroll(t) {\n        return this.renderer.setScroll(t);\n    }\n    setScrollTime(t) {\n        const e = t / this.getDuration();\n        this.renderer.setScrollPercentage(e);\n    }\n    getActivePlugins() {\n        return this.plugins;\n    }\n    loadAudio(e, s, n, r) {\n        var a;\n        return t(this, void 0, void 0, function*() {\n            if (this.emit(\"load\", e), !this.options.media && this.isPlaying() && this.pause(), this.decodedData = null, !s && !n) {\n                const t = this.options.fetchParams || {};\n                window.AbortController && !t.signal && (this.abortController = new AbortController, t.signal = null === (a = this.abortController) || void 0 === a ? void 0 : a.signal);\n                const i = (t)=>this.emit(\"loading\", t);\n                s = yield o.fetchBlob(e, i, t);\n            }\n            this.setSrc(e, s);\n            const t = r || this.getDuration() || (yield new Promise((t)=>{\n                this.onMediaEvent(\"loadedmetadata\", ()=>t(this.getDuration()), {\n                    once: !0\n                });\n            }));\n            if (!e && !s) {\n                const e = this.getMediaElement();\n                e instanceof d && (e.duration = t);\n            }\n            if (n) this.decodedData = i.createBuffer(n, t || 0);\n            else if (s) {\n                const t = yield s.arrayBuffer();\n                this.decodedData = yield i.decode(t, this.options.sampleRate);\n            }\n            this.decodedData && (this.emit(\"decode\", this.getDuration()), this.renderer.render(this.decodedData)), this.emit(\"ready\", this.getDuration());\n        });\n    }\n    load(e, i, s) {\n        return t(this, void 0, void 0, function*() {\n            try {\n                return yield this.loadAudio(e, void 0, i, s);\n            } catch (t) {\n                throw this.emit(\"error\", t), t;\n            }\n        });\n    }\n    loadBlob(e, i, s) {\n        return t(this, void 0, void 0, function*() {\n            try {\n                return yield this.loadAudio(\"blob\", e, i, s);\n            } catch (t) {\n                throw this.emit(\"error\", t), t;\n            }\n        });\n    }\n    zoom(t) {\n        if (!this.decodedData) throw new Error(\"No audio loaded\");\n        this.renderer.zoom(t), this.emit(\"zoom\", t);\n    }\n    getDecodedData() {\n        return this.decodedData;\n    }\n    exportPeaks() {\n        let { channels: t = 2, maxLength: e = 8e3, precision: i = 1e4 } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        if (!this.decodedData) throw new Error(\"The audio has not been decoded yet\");\n        const s = Math.min(t, this.decodedData.numberOfChannels), n = [];\n        for(let t = 0; t < s; t++){\n            const s = this.decodedData.getChannelData(t), r = [], o = s.length / e;\n            for(let t = 0; t < e; t++){\n                const e = s.slice(Math.floor(t * o), Math.ceil((t + 1) * o));\n                let n = 0;\n                for(let t = 0; t < e.length; t++){\n                    const i = e[t];\n                    Math.abs(i) > Math.abs(n) && (n = i);\n                }\n                r.push(Math.round(n * i) / i);\n            }\n            n.push(r);\n        }\n        return n;\n    }\n    getDuration() {\n        let t = super.getDuration() || 0;\n        return 0 !== t && t !== 1 / 0 || !this.decodedData || (t = this.decodedData.duration), t;\n    }\n    toggleInteraction(t) {\n        this.options.interact = t;\n    }\n    setTime(t) {\n        super.setTime(t), this.updateProgress(t), this.emit(\"timeupdate\", t);\n    }\n    seekTo(t) {\n        const e = this.getDuration() * t;\n        this.setTime(e);\n    }\n    playPause() {\n        return t(this, void 0, void 0, function*() {\n            return this.isPlaying() ? this.pause() : this.play();\n        });\n    }\n    stop() {\n        this.pause(), this.setTime(0);\n    }\n    skip(t) {\n        this.setTime(this.getCurrentTime() + t);\n    }\n    empty() {\n        this.load(\"\", [\n            [\n                0\n            ]\n        ], .001);\n    }\n    setMediaElement(t) {\n        this.unsubscribePlayerEvents(), super.setMediaElement(t), this.initPlayerEvents();\n    }\n    exportImage() {\n        let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"image/png\", i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1, s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : \"dataURL\";\n        return t(this, void 0, void 0, function*() {\n            return this.renderer.exportImage(e, i, s);\n        });\n    }\n    destroy() {\n        var t;\n        this.emit(\"destroy\"), null === (t = this.abortController) || void 0 === t || t.abort(), this.plugins.forEach((t)=>t.destroy()), this.subscriptions.forEach((t)=>t()), this.unsubscribePlayerEvents(), this.timer.destroy(), this.renderer.destroy(), super.destroy();\n    }\n    constructor(t){\n        const e = t.media || (\"WebAudio\" === t.backend ? new d : void 0);\n        super({\n            media: e,\n            mediaControls: t.mediaControls,\n            autoplay: t.autoplay,\n            playbackRate: t.audioRate\n        }), this.plugins = [], this.decodedData = null, this.subscriptions = [], this.mediaSubscriptions = [], this.abortController = null, this.options = Object.assign({}, c, t), this.timer = new l;\n        const i = e ? void 0 : this.getMediaElement();\n        this.renderer = new h(this.options, i), this.initPlayerEvents(), this.initRendererEvents(), this.initTimerEvents(), this.initPlugins(), Promise.resolve().then(()=>{\n            this.emit(\"init\");\n            const t = this.options.url || this.getSrc() || \"\";\n            (t || this.options.peaks && this.options.duration) && this.load(t, this.options.peaks, this.options.duration).catch(()=>null);\n        });\n    }\n}\nu.BasePlugin = class extends e {\n    onInit() {}\n    _init(t) {\n        this.wavesurfer = t, this.onInit();\n    }\n    destroy() {\n        this.emit(\"destroy\"), this.subscriptions.forEach((t)=>t());\n    }\n    constructor(t){\n        super(), this.subscriptions = [], this.options = t;\n    }\n}, u.dom = r;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/wavesurfer.js/dist/wavesurfer.esm.js\n"));

/***/ })

});